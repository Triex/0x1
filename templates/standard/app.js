// 0x1 Standard TypeScript Template - Bundled with Bun
// This file is automatically generated - do not edit directly

(() => {
  // src/lib/router.ts
  class Router {
    routes = {};
    root;
    notFoundHandler = null;
    constructor(rootElement) {
      this.root = rootElement;
      window.addEventListener("popstate", this.handleRouteChange.bind(this));
    }
    addRoute(path, handler) {
      this.routes[path] = handler;
    }
    setNotFound(handler) {
      this.notFoundHandler = handler;
    }
    handleRouteChange() {
      const path = window.location.pathname;
      this.renderRoute(path);
    }
    renderRoute(path) {
      console.log(`Rendering route: ${path}`);
      const mainContent = document.getElementById("main-content");
      if (!mainContent) {
        console.error("Main content container not found, falling back to root element");
      }
      const targetElement = mainContent || this.root;
      console.log(`Target element for content:`, targetElement);
      while (targetElement.firstChild) {
        targetElement.removeChild(targetElement.firstChild);
      }
      let content = null;
      if (this.routes[path]) {
        content = this.routes[path]();
      } else {
        const dynamicRouteMatch = this.matchDynamicRoute(path);
        if (dynamicRouteMatch) {
          const { route, params } = dynamicRouteMatch;
          content = this.routes[route](params);
        } else if (this.notFoundHandler) {
          content = this.notFoundHandler();
        } else {
          content = document.createElement("div");
          content.innerHTML = "<h1>Page Not Found</h1><p>The requested page could not be found.</p>";
        }
      }
      if (content) {
        content.classList.add("animate-fade-in");
        targetElement.appendChild(content);
        console.log("Content rendered successfully");
      } else {
        console.error("Failed to generate content for route");
      }
    }
    matchDynamicRoute(path) {
      for (const route of Object.keys(this.routes)) {
        if (!route.includes(":"))
          continue;
        const routeParts = route.split("/");
        const pathParts = path.split("/");
        if (routeParts.length !== pathParts.length)
          continue;
        const params = {};
        let matched = true;
        for (let i = 0;i < routeParts.length; i++) {
          if (routeParts[i].startsWith(":")) {
            const paramName = routeParts[i].slice(1);
            params[paramName] = pathParts[i];
          } else if (routeParts[i] !== pathParts[i]) {
            matched = false;
            break;
          }
        }
        if (matched) {
          return { route, params };
        }
      }
      return null;
    }
    navigateTo(path) {
      window.history.pushState(null, "", path);
      this.renderRoute(path);
    }
    init() {
      this.handleRouteChange();
    }
  }

  // src/pages/about.ts
  function About() {
    const container = document.createElement("div");
    container.className = "max-w-3xl mx-auto";
    const header = document.createElement("header");
    header.className = "mb-12 border-b pb-8 border-gray-200 dark:border-gray-700";
    container.appendChild(header);
    const title = document.createElement("h1");
    title.className = "text-4xl font-bold text-gray-900 dark:text-white mb-4";
    title.textContent = "About 0x1";
    header.appendChild(title);
    const subtitle = document.createElement("p");
    subtitle.className = "text-xl text-gray-600 dark:text-gray-300";
    subtitle.textContent = "The ultra-minimal TypeScript framework with extreme performance";
    header.appendChild(subtitle);
    const content = document.createElement("div");
    content.className = "space-y-8 prose dark:prose-invert max-w-none";
    container.appendChild(content);
    const section1 = document.createElement("section");
    content.appendChild(section1);
    const section1Title = document.createElement("h2");
    section1Title.textContent = "What is 0x1?";
    section1.appendChild(section1Title);
    const section1Content = document.createElement("p");
    section1Content.textContent = "0x1 is a modern web framework built on the Bun JavaScript runtime. It focuses on performance and developer experience, providing a minimal yet powerful foundation for building web applications.";
    section1.appendChild(section1Content);
    const section1List = document.createElement("ul");
    ["Zero-dependency router", "Component system", "TypeScript-first approach", "Extreme performance", "Native ESM"].forEach((item) => {
      const li = document.createElement("li");
      li.textContent = item;
      section1List.appendChild(li);
    });
    section1.appendChild(section1List);
    const section2 = document.createElement("section");
    content.appendChild(section2);
    const section2Title = document.createElement("h2");
    section2Title.textContent = "Why use 0x1?";
    section2.appendChild(section2Title);
    const section2Content = document.createElement("p");
    section2Content.textContent = "0x1 takes a different approach from most modern frameworks:";
    section2.appendChild(section2Content);
    const section2List = document.createElement("ol");
    [
      "Zero abstraction cost: No virtual DOM or complex state tracking",
      "Browser-native: Leverage what browsers are good at",
      "Minimal but complete: You get exactly what you need",
      "No dependencies: Entire framework in one tiny package",
      "Extreme performance: Loaded page performance, not DX shortcuts"
    ].forEach((item, index) => {
      const li = document.createElement("li");
      li.textContent = item;
      section2List.appendChild(li);
    });
    section2.appendChild(section2List);
    const section3 = document.createElement("section");
    content.appendChild(section3);
    const section3Title = document.createElement("h2");
    section3Title.textContent = "Our Team";
    section3.appendChild(section3Title);
    const section3Content = document.createElement("p");
    section3Content.textContent = "0x1 is built by a team of experienced developers focused on pushing the boundaries of web performance.";
    section3.appendChild(section3Content);
    const action = document.createElement("div");
    action.className = "mt-12 text-center";
    container.appendChild(action);
    const actionButton = document.createElement("a");
    actionButton.href = "/";
    actionButton.className = "inline-block bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-6 rounded-lg transition-colors duration-200";
    actionButton.textContent = "Back to Home";
    actionButton.onclick = (e) => {
      e.preventDefault();
      window.history.pushState(null, "", "/");
      const popStateEvent = new PopStateEvent("popstate", { state: null });
      window.dispatchEvent(popStateEvent);
    };
    action.appendChild(actionButton);
    return container;
  }

  // src/components/Card.ts
  function Card(props) {
    const card = document.createElement("div");
    card.className = "bg-white dark:bg-gray-800 rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300 p-6 border border-gray-100 dark:border-gray-700";
    if (props.icon) {
      const iconContainer = document.createElement("div");
      iconContainer.className = "text-3xl mb-4";
      iconContainer.textContent = props.icon;
      card.appendChild(iconContainer);
    }
    const title = document.createElement("h3");
    title.className = "text-xl font-bold mb-2 text-gray-900 dark:text-white";
    title.textContent = props.title;
    card.appendChild(title);
    const content = document.createElement("p");
    content.className = "text-gray-600 dark:text-gray-300 mb-4";
    content.textContent = props.content;
    card.appendChild(content);
    if (props.link) {
      const link = document.createElement("a");
      link.href = props.link.url;
      link.className = "text-blue-600 dark:text-blue-400 hover:underline inline-flex items-center";
      link.textContent = props.link.text;
      const arrow = document.createElement("span");
      arrow.className = "ml-1";
      arrow.innerHTML = "&rarr;";
      link.appendChild(arrow);
      card.appendChild(link);
    }
    return card;
  }

  // src/pages/home.ts
  function Home() {
    const container = document.createElement("div");
    container.className = "space-y-8";
    const hero = document.createElement("section");
    hero.className = "text-center pb-12 border-b border-gray-200 dark:border-gray-700";
    container.appendChild(hero);
    const heroTitle = document.createElement("h1");
    heroTitle.className = "text-4xl font-bold text-gray-900 dark:text-white mb-4";
    heroTitle.textContent = "Welcome to 0x1 Standard";
    hero.appendChild(heroTitle);
    const heroSubtitle = document.createElement("p");
    heroSubtitle.className = "text-xl text-gray-600 dark:text-gray-300 mb-8 max-w-2xl mx-auto";
    heroSubtitle.textContent = "A complete starter template with everything you need to build modern web applications.";
    hero.appendChild(heroSubtitle);
    const actionButton = document.createElement("a");
    actionButton.href = "/about";
    actionButton.className = "inline-block bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-6 rounded-lg transition-colors duration-200";
    actionButton.textContent = "Learn More";
    actionButton.onclick = (e) => {
      e.preventDefault();
      window.history.pushState(null, "", "/about");
      const popStateEvent = new PopStateEvent("popstate", { state: null });
      window.dispatchEvent(popStateEvent);
    };
    hero.appendChild(actionButton);
    const features = document.createElement("section");
    features.className = "py-12";
    container.appendChild(features);
    const featuresTitle = document.createElement("h2");
    featuresTitle.className = "text-3xl font-bold text-center mb-12 text-gray-900 dark:text-white";
    featuresTitle.textContent = "Features";
    features.appendChild(featuresTitle);
    const featureGrid = document.createElement("div");
    featureGrid.className = "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8";
    features.appendChild(featureGrid);
    const featureItems = [
      {
        title: "TypeScript Ready",
        description: "Built with TypeScript for excellent developer experience and type safety.",
        icon: "\uD83D\uDD37"
      },
      {
        title: "Component System",
        description: "Modular component architecture for building complex UIs.",
        icon: "\uD83E\uDDE9"
      },
      {
        title: "Tailwind CSS",
        description: "Modern utility-first CSS framework for rapid UI development.",
        icon: "\uD83C\uDFA8"
      },
      {
        title: "Fast Router",
        description: "Lightweight client-side routing with support for dynamic routes.",
        icon: "\uD83D\uDD04"
      },
      {
        title: "Dark Mode",
        description: "Built-in dark mode support with system preference detection.",
        icon: "\uD83C\uDF13"
      },
      {
        title: "Bun Powered",
        description: "Lightning fast development with Bun runtime and package manager.",
        icon: "⚡"
      }
    ];
    featureItems.forEach((item) => {
      const card = Card({
        title: item.title,
        content: item.description,
        icon: item.icon
      });
      featureGrid.appendChild(card);
    });
    return container;
  }

  // src/pages/not-found.ts
  function NotFound() {
    const container = document.createElement("div");
    container.className = "flex flex-col items-center justify-center py-16 text-center";
    const errorCode = document.createElement("div");
    errorCode.className = "text-7xl font-bold text-gray-300 dark:text-gray-700 mb-4";
    errorCode.textContent = "404";
    container.appendChild(errorCode);
    const title = document.createElement("h1");
    title.className = "text-3xl font-bold text-gray-900 dark:text-white mb-2";
    title.textContent = "Page Not Found";
    container.appendChild(title);
    const description = document.createElement("p");
    description.className = "text-xl text-gray-600 dark:text-gray-400 mb-8";
    description.textContent = "The page you're looking for doesn't exist or has been moved.";
    container.appendChild(description);
    const backButton = document.createElement("a");
    backButton.href = "/";
    backButton.className = "bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-6 rounded-lg transition-colors duration-200";
    backButton.textContent = "Go Back Home";
    backButton.onclick = (e) => {
      e.preventDefault();
      window.history.pushState(null, "", "/");
      const popStateEvent = new PopStateEvent("popstate", { state: null });
      window.dispatchEvent(popStateEvent);
    };
    container.appendChild(backButton);
    return container;
  }

  // src/app.ts
  var STORAGE_KEY = "0x1-dark-mode";
  function ready(callback) {
    if (document.readyState !== "loading") {
      callback();
    } else {
      document.addEventListener("DOMContentLoaded", callback);
    }
  }
  function initializeTheme() {
    const savedTheme = localStorage.getItem(STORAGE_KEY);
    const prefersDark = window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches;
    if (savedTheme === "dark" || savedTheme === null && prefersDark) {
      document.documentElement.classList.add("dark");
    } else if (savedTheme === "light") {
      document.documentElement.classList.remove("dark");
    }
    window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change", (e) => {
      if (!localStorage.getItem(STORAGE_KEY)) {
        if (e.matches) {
          document.documentElement.classList.add("dark");
        } else {
          document.documentElement.classList.remove("dark");
        }
      }
    });
  }
  ready(() => {
    console.log("DOM ready - initializing app");
    initializeTheme();
    const themeToggle = document.getElementById("theme-toggle");
    if (themeToggle) {
      themeToggle.addEventListener("click", () => {
        if (document.documentElement.classList.contains("dark")) {
          document.documentElement.classList.remove("dark");
          localStorage.setItem(STORAGE_KEY, "light");
        } else {
          document.documentElement.classList.add("dark");
          localStorage.setItem(STORAGE_KEY, "dark");
        }
      });
    }
    const main = document.getElementById("main-content");
    if (!main) {
      console.error("Main content element not found");
      return;
    }
    console.log("Using existing HTML structure for app");
    const router = new Router(main);
    router.addRoute("/", Home);
    router.addRoute("/about", About);
    router.setNotFound(NotFound);
    router.init();
  });
})();

//# debugId=E9C9445CFFB4848464756E2164756E21
