#!/usr/bin/env node

/**
 * 0x1 CLI Entry Point 
 * Uses Node.js compatibility for global binary exposure
 * But executes with Bun runtime
 */

// Explicitly use the node built-ins for maximum compatibility
const path = require('path');
const { spawnSync } = require('child_process');

// Potential locations for the CLI script
const locations = [
  // Local development or npm/yarn link
  path.join(__dirname, '../dist/cli/index.js'),
  // Global Bun installation locations
  path.join(process.env.HOME || '', '.bun/install/global/node_modules/0x1/dist/cli/index.js'),
  // Try to use globally installed executable directly if above fails
  '0x1'
];

// Try to execute Bun with the CLI script
try {
  // Run with Bun using the first available path
  const args = process.argv.slice(2);
  let bunArgs = [];
  
  // Find an existing CLI script path
  const fs = require('fs');
  for (const loc of locations) {
    if (loc === '0x1') {
      // If we get here, use bunx as a last resort
      const result = spawnSync('bunx', ['0x1', ...args], { stdio: 'inherit' });
      process.exit(result.status || 0);
    } else if (fs.existsSync(loc)) {
      bunArgs = [loc, ...args];
      break;
    }
  }
  
  if (bunArgs.length === 0) {
    throw new Error('Could not find 0x1 CLI script');
  }

  // Execute with Bun
  const result = spawnSync('bun', bunArgs, { stdio: 'inherit' });
  process.exit(result.status || 0);
} catch (error) {
  console.error('Error executing 0x1 CLI:', error.message);
  console.error('\nMake sure Bun is installed and try reinstalling with: bun install -g 0x1');
  console.error('You may need to add ~/.bun/bin to your PATH');
  console.error('\nAdd this to your profile (~/.zshrc, ~/.bashrc, etc.):');
  console.error('export BUN_INSTALL="$HOME/.bun"');
  console.error('export PATH="$BUN_INSTALL/bin:$PATH"');
  process.exit(1);
}
