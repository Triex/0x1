{
  "version": 3,
  "sources": ["../src/core/component.ts", "../src/core/hooks.ts", "../src/core/navigation.ts", "../src/core/store.ts", "../src/utils/animations.ts", "../src/utils/dom.ts", "../src/index.ts"],
  "sourcesContent": [
    "/**\n * 0x1 Component System\n * A lightweight component system for creating DOM elements with minimal overhead\n */\n\nexport interface ComponentProps {\n  [key: string]: any;\n  children?: Array<HTMLElement | string>;\n  className?: string;\n  id?: string;\n}\n\nexport type Component<P extends ComponentProps = ComponentProps> = (props: P) => HTMLElement;\n\n/**\n * Creates a DOM element with the specified tag and props\n */\nexport function createElement<K extends keyof HTMLElementTagNameMap>(\n  tag: K,\n  props: ComponentProps = {}\n): HTMLElementTagNameMap[K] {\n  const { children = [], className, id, ...rest } = props;\n  \n  // Create the element\n  const element = document.createElement(tag);\n  \n  // Set id and class if provided\n  if (id) element.id = id;\n  if (className) element.className = className;\n  \n  // Set other attributes\n  Object.entries(rest).forEach(([key, value]) => {\n    if (key.startsWith('on') && typeof value === 'function') {\n      // Handle event listeners (e.g. onClick -> addEventListener('click', fn))\n      const eventName = key.substring(2).toLowerCase();\n      element.addEventListener(eventName, value as EventListener);\n    } else if (key === 'style' && typeof value === 'object') {\n      // Handle style object\n      Object.entries(value).forEach(([cssKey, cssValue]) => {\n        (element.style as any)[cssKey] = cssValue;\n      });\n    } else if (value !== undefined && value !== null) {\n      // Set attribute for everything else (skip null/undefined)\n      element.setAttribute(key, String(value));\n    }\n  });\n  \n  // Append children\n  children.forEach(child => {\n    if (typeof child === 'string') {\n      element.appendChild(document.createTextNode(child));\n    } else if (child instanceof HTMLElement) {\n      element.appendChild(child);\n    }\n  });\n  \n  return element;\n}\n\n/**\n * Creates a component that can be reused\n */\nexport function createComponent<P extends ComponentProps>(\n  render: (props: P) => HTMLElement\n): Component<P> {\n  return render;\n}\n\n/**\n * Mount a component to a DOM element\n */\nexport function mount(component: Component | HTMLElement, container: HTMLElement): void {\n  const element = component instanceof HTMLElement ? component : component({});\n  container.innerHTML = '';\n  container.appendChild(element);\n}\n\n/**\n * Updates an existing component with new props\n */\nexport function updateComponent<P extends ComponentProps>(\n  element: HTMLElement,\n  component: Component<P>,\n  props: P\n): HTMLElement {\n  const newElement = component(props);\n  if (element.parentNode) {\n    element.parentNode.replaceChild(newElement, element);\n  }\n  return newElement;\n}\n\n/**\n * Fragment component for grouping multiple children without a wrapper element\n */\nexport function Fragment(props: ComponentProps): DocumentFragment {\n  const fragment = document.createDocumentFragment();\n  \n  if (props.children) {\n    props.children.forEach(child => {\n      if (typeof child === 'string') {\n        fragment.appendChild(document.createTextNode(child));\n      } else if (child instanceof HTMLElement) {\n        fragment.appendChild(child);\n      }\n    });\n  }\n  \n  return fragment as unknown as DocumentFragment;\n}\n\n/**\n * Create a DOM element from an HTML string\n */\nexport function fromHTML(html: string): HTMLElement {\n  const template = document.createElement('template');\n  template.innerHTML = html.trim();\n  return template.content.firstElementChild as HTMLElement;\n}\n\n/**\n * Create an element with specified tag name and text content\n */\nexport function textElement<K extends keyof HTMLElementTagNameMap>(\n  tag: K, \n  text: string, \n  props: Omit<ComponentProps, 'children'> = {}\n): HTMLElementTagNameMap[K] {\n  return createElement(tag, { ...props, children: [text] });\n}\n\n/**\n * Create a component from a template string\n * This allows for markup-like syntax in strings\n */\nexport function template(strings: TemplateStringsArray, ...values: any[]): HTMLElement {\n  const html = strings.reduce((result, str, i) => {\n    const value = values[i] || '';\n    return result + str + value;\n  }, '');\n  \n  return fromHTML(html);\n}\n",
    "/**\n * 0x1 Hooks System\n * Provides React-like hooks for state management and effects\n */\n\n// Current component context for hooks\nlet currentComponent: any = null;\nlet currentIndex = 0;\n\n// Store for component states\nconst componentStates = new Map<any, any[]>();\nconst componentEffects = new Map<any, EffectState[]>();\nconst componentCleanups = new Map<any, (() => void)[]>();\n\ninterface EffectState {\n  deps: any[] | undefined;\n  cleanup: (() => void) | undefined;\n}\n\n/**\n * Set the current component context for hooks\n */\nexport function setCurrentComponent(component: any): void {\n  currentComponent = component;\n  currentIndex = 0;\n}\n\n/**\n * Reset the hook context after rendering\n */\nexport function resetHookContext(): void {\n  currentComponent = null;\n  currentIndex = 0;\n}\n\n/**\n * The useState hook for managing component state\n */\nexport function useState<T>(initialValue: T | (() => T)): [T, (newValue: T | ((prevState: T) => T)) => void] {\n  if (!currentComponent) {\n    throw new Error('useState must be called within a component');\n  }\n\n  // Get or initialize state for this component\n  if (!componentStates.has(currentComponent)) {\n    componentStates.set(currentComponent, []);\n  }\n\n  const states = componentStates.get(currentComponent)!;\n  const stateIndex = currentIndex++;\n\n  // Initialize state if needed\n  if (states.length <= stateIndex) {\n    // Handle function initializer\n    states[stateIndex] = typeof initialValue === 'function'\n      ? (initialValue as () => T)()\n      : initialValue;\n  }\n\n  const state = states[stateIndex];\n\n  // Create setter function\n  const setState = (newValue: T | ((prevState: T) => T)) => {\n    const states = componentStates.get(currentComponent)!;\n    const prevState = states[stateIndex];\n    \n    // Handle function updater\n    const nextState = typeof newValue === 'function'\n      ? (newValue as ((prevState: T) => T))(prevState)\n      : newValue;\n\n    // Only update and trigger render if state changed\n    if (prevState !== nextState) {\n      states[stateIndex] = nextState;\n      \n      // Trigger re-render\n      if (currentComponent.update) {\n        currentComponent.update();\n      }\n    }\n  };\n\n  return [state, setState];\n}\n\n/**\n * The useEffect hook for side effects\n */\nexport function useEffect(effect: () => void | (() => void), deps?: any[]): void {\n  if (!currentComponent) {\n    throw new Error('useEffect must be called within a component');\n  }\n  \n  // Get or initialize effects for this component\n  if (!componentEffects.has(currentComponent)) {\n    componentEffects.set(currentComponent, []);\n    componentCleanups.set(currentComponent, []);\n  }\n\n  const effects = componentEffects.get(currentComponent)!;\n  const cleanups = componentCleanups.get(currentComponent)!;\n  const effectIndex = currentIndex++;\n\n  // Initialize effect if needed\n  if (effects.length <= effectIndex) {\n    effects.push({ deps: undefined, cleanup: undefined });\n  }\n\n  const currentEffect = effects[effectIndex];\n  \n  // Check if dependencies changed\n  const depsChanged = !deps || !currentEffect.deps || \n    deps.length !== currentEffect.deps.length ||\n    deps.some((dep, i) => dep !== currentEffect.deps![i]);\n\n  // Store new dependencies\n  currentEffect.deps = deps;\n\n  // Schedule effect to run after render if deps changed\n  if (depsChanged) {\n    // We'll run the effect after the render is complete\n    queueMicrotask(() => {\n      // Clean up previous effect\n      if (currentEffect.cleanup) {\n        currentEffect.cleanup();\n      }\n\n      // Run new effect\n      const cleanup = effect();\n      currentEffect.cleanup = typeof cleanup === 'function' ? cleanup : undefined;\n\n      // Store cleanup for component unmount\n      if (currentEffect.cleanup) {\n        cleanups[effectIndex] = currentEffect.cleanup;\n      }\n    });\n  }\n}\n\n/**\n * The useMemo hook for memoizing computed values\n */\nexport function useMemo<T>(factory: () => T, deps: any[]): T {\n  if (!currentComponent) {\n    throw new Error('useMemo must be called within a component');\n  }\n\n  // Get or initialize memo state for this component\n  if (!componentStates.has(currentComponent)) {\n    componentStates.set(currentComponent, []);\n  }\n\n  const states = componentStates.get(currentComponent)!;\n  const memoIndex = currentIndex++;\n\n  // Initialize memo state if needed\n  if (states.length <= memoIndex) {\n    states[memoIndex] = { value: factory(), deps };\n  } else {\n    const memo = states[memoIndex];\n    \n    // Check if dependencies changed\n    const depsChanged = !deps || !memo.deps || \n      deps.length !== memo.deps.length ||\n      deps.some((dep, i) => dep !== memo.deps[i]);\n\n    // Recompute if deps changed\n    if (depsChanged) {\n      memo.value = factory();\n      memo.deps = deps;\n    }\n  }\n\n  return states[memoIndex].value;\n}\n\n/**\n * The useCallback hook for memoizing functions\n */\nexport function useCallback<T extends Function>(callback: T, deps: any[]): T {\n  return useMemo(() => callback, deps);\n}\n\n/**\n * The useRef hook for persisting values between renders\n */\nexport function useRef<T>(initialValue: T): { current: T } {\n  if (!currentComponent) {\n    throw new Error('useRef must be called within a component');\n  }\n\n  // Get or initialize ref state for this component\n  if (!componentStates.has(currentComponent)) {\n    componentStates.set(currentComponent, []);\n  }\n\n  const states = componentStates.get(currentComponent)!;\n  const refIndex = currentIndex++;\n\n  // Initialize ref if needed\n  if (states.length <= refIndex) {\n    states[refIndex] = { current: initialValue };\n  }\n\n  return states[refIndex];\n}\n\n/**\n * Runs when a component is unmounted\n */\nexport function unmountComponent(component: any): void {\n  // Run all cleanup functions\n  if (componentCleanups.has(component)) {\n    const cleanups = componentCleanups.get(component)!;\n    for (const cleanup of cleanups) {\n      if (cleanup) {\n        cleanup();\n      }\n    }\n  }\n  \n  // Clear component state\n  componentStates.delete(component);\n  componentEffects.delete(component);\n  componentCleanups.delete(component);\n}\n\n/**\n * Custom hook for managing forms\n */\nexport function useForm<T extends Record<string, any>>(initialValues: T) {\n  const [values, setValues] = useState<T>(initialValues);\n  const [errors, setErrors] = useState<Partial<Record<keyof T, string>>>({});\n  const [touched, setTouched] = useState<Partial<Record<keyof T, boolean>>>({});\n  \n  const handleChange = (e: Event) => {\n    const target = e.target as HTMLInputElement;\n    const name = target.name as keyof T;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    \n    setValues(prev => ({ ...prev, [name]: value }));\n  };\n  \n  const handleBlur = (e: Event) => {\n    const target = e.target as HTMLInputElement;\n    const name = target.name as keyof T;\n    \n    setTouched(prev => ({ ...prev, [name]: true }));\n  };\n  \n  const reset = () => {\n    setValues(initialValues);\n    setErrors({});\n    setTouched({});\n  };\n  \n  return {\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    setValues,\n    setErrors,\n    reset\n  };\n}\n\n/**\n * Custom hook for fetching data\n */\nexport function useFetch<T>(url: string, options?: RequestInit) {\n  const [data, setData] = useState<T | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<Error | null>(null);\n  \n  useEffect(() => {\n    let isMounted = true;\n    const controller = new AbortController();\n    \n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        \n        const response = await fetch(url, {\n          ...options,\n          signal: controller.signal\n        });\n        \n        if (!response.ok) {\n          throw new Error(`HTTP error: ${response.status}`);\n        }\n        \n        const result = await response.json();\n        \n        if (isMounted) {\n          setData(result);\n          setLoading(false);\n        }\n      } catch (err) {\n        if (isMounted) {\n          setError(err as Error);\n          setLoading(false);\n        }\n      }\n    };\n    \n    fetchData();\n    \n    return () => {\n      isMounted = false;\n      controller.abort();\n    };\n  }, [url, JSON.stringify(options)]);\n  \n  return { data, loading, error };\n}\n\n/**\n * Custom hook for local storage\n */\nexport function useLocalStorage<T>(key: string, initialValue: T) {\n  const [storedValue, setStoredValue] = useState<T>(() => {\n    try {\n      if (typeof window !== 'undefined') {\n        const item = window.localStorage.getItem(key);\n        return item ? JSON.parse(item) : initialValue;\n      }\n      return initialValue;\n    } catch (error) {\n      console.warn(`Error reading localStorage key \"${key}\":`, error);\n      return initialValue;\n    }\n  });\n  \n  const setValue = (value: T | ((val: T) => T)) => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      \n      if (typeof window !== 'undefined') {\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\n      }\n    } catch (error) {\n      console.warn(`Error setting localStorage key \"${key}\":`, error);\n    }\n  };\n  \n  return [storedValue, setValue] as [T, (value: T | ((val: T) => T)) => void];\n}\n\n/**\n * Custom hook for handling clicks outside an element\n */\nexport function useClickOutside<T extends HTMLElement>(callback: () => void) {\n  const ref = useRef<T | null>(null);\n  \n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (ref.current && !ref.current.contains(event.target as Node)) {\n        callback();\n      }\n    };\n    \n    document.addEventListener('mousedown', handleClickOutside);\n    \n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [callback]);\n  \n  return ref;\n}\n",
    "/**\n * 0x1 Navigation System\n * Provides routing and page navigation capabilities\n */\n\nimport { setCurrentComponent, resetHookContext } from './hooks.js';\n\nexport interface RouteParams {\n  [key: string]: string;\n}\n\nexport interface NavigationOptions {\n  mode?: 'history' | 'hash';\n  basePath?: string;\n  notFoundComponent?: Page<any> | Component;\n  transitionDuration?: number;\n}\n\nexport interface RouterState {\n  currentPath: string;\n  previousPath: string | null;\n  params: RouteParams;\n  query: Record<string, string>;\n}\n\nexport interface Component {\n  render: (props?: any) => HTMLElement;\n  onMount?: () => void;\n  onUnmount?: () => void;\n}\n\nexport interface Page<P = any> extends Component {\n  title?: string;\n  meta?: {\n    description?: string;\n    [key: string]: string | undefined;\n  };\n  render: (props?: P) => HTMLElement;\n  onMount?: () => void;\n  onUnmount?: () => void;\n}\n\ninterface Route {\n  path: string;\n  pattern: RegExp;\n  paramNames: string[];\n  component: Page<any> | Component;\n}\n\n/**\n * Router class for SPA navigation\n */\nexport class Router {\n  private routes: Route[] = [];\n  private rootElement: HTMLElement;\n  private mode: 'history' | 'hash';\n  private basePath: string;\n  private notFoundComponent: Page<any> | Component | null = null;\n  private currentComponent: Component | null = null;\n  private currentElement: HTMLElement | null = null;\n  private transitionDuration: number;\n  private state: RouterState;\n\n  /**\n   * Create a router instance\n   */\n  constructor(options: {\n    root: HTMLElement;\n    mode?: 'history' | 'hash';\n    basePath?: string;\n    notFoundComponent?: Page<any> | Component;\n    transitionDuration?: number;\n  }) {\n    this.rootElement = options.root;\n    this.mode = options.mode || 'history';\n    this.basePath = options.basePath || '';\n    this.notFoundComponent = options.notFoundComponent || null;\n    this.transitionDuration = options.transitionDuration || 200;\n    \n    this.state = {\n      currentPath: this.getCurrentPath(),\n      previousPath: null,\n      params: {},\n      query: {},\n    };\n  }\n\n  /**\n   * Add a route\n   */\n  addRoute(path: string, component: Page<any> | Component): void {\n    // Convert path pattern to regex (e.g., '/users/:id' -> /^\\/users\\/([^\\/]+)$/)\n    const paramNames: string[] = [];\n    \n    const pattern = path\n      .replace(/:[a-zA-Z0-9_]+/g, (match) => {\n        const paramName = match.slice(1);\n        paramNames.push(paramName);\n        return '([^/]+)';\n      })\n      .replace(/\\/$/, '') // Remove trailing slash\n      .replace(/\\/\\*$/, '(/.*)?'); // Handle wildcard routes\n    \n    this.routes.push({\n      path,\n      pattern: new RegExp(`^${pattern}$`),\n      paramNames,\n      component,\n    });\n  }\n\n  /**\n   * Initialize the router\n   */\n  init(): void {\n    // Handle initial route\n    this.handleRoute(this.getCurrentPath());\n    \n    // Add event listeners\n    window.addEventListener('popstate', this.handlePopState);\n    \n    // For hash mode\n    if (this.mode === 'hash') {\n      window.addEventListener('hashchange', this.handleHashChange);\n    }\n    \n    // Intercept clicks on links\n    document.addEventListener('click', this.handleLinkClick);\n  }\n\n  /**\n   * Navigate to a new path\n   */\n  navigate(path: string): void {\n    if (path === this.state.currentPath) return;\n    \n    if (this.mode === 'history') {\n      history.pushState(null, '', this.basePath + path);\n      this.handleRoute(path);\n    } else {\n      window.location.hash = path;\n    }\n  }\n\n  /**\n   * Handle popstate event (for history API)\n   */\n  private handlePopState = () => {\n    this.handleRoute(this.getCurrentPath());\n  };\n\n  /**\n   * Handle hashchange event (for hash routing)\n   */\n  private handleHashChange = () => {\n    this.handleRoute(this.getCurrentPath());\n  };\n\n  /**\n   * Intercept link clicks for SPA navigation\n   */\n  private handleLinkClick = (event: MouseEvent) => {\n    const target = event.target as HTMLElement;\n    const link = target.closest('a');\n    \n    if (\n      link &&\n      link.href &&\n      link.origin === window.location.origin &&\n      !link.hasAttribute('data-external') &&\n      !event.ctrlKey &&\n      !event.metaKey &&\n      !event.shiftKey\n    ) {\n      event.preventDefault();\n      \n      const path = \n        this.mode === 'hash'\n          ? link.hash.slice(1) || '/'\n          : link.pathname.replace(this.basePath, '');\n      \n      this.navigate(path);\n    }\n  };\n\n  /**\n   * Get current path based on routing mode\n   */\n  private getCurrentPath(): string {\n    if (this.mode === 'hash') {\n      return (window.location.hash.slice(1) || '/').replace(this.basePath, '');\n    } else {\n      return window.location.pathname.replace(this.basePath, '') || '/';\n    }\n  }\n\n  /**\n   * Match a path against routes\n   */\n  private matchRoute(path: string): { route: Route; params: RouteParams } | null {\n    for (const route of this.routes) {\n      const match = path.match(route.pattern);\n      \n      if (match) {\n        const params: RouteParams = {};\n        \n        // Extract route params\n        route.paramNames.forEach((name, index) => {\n          params[name] = match[index + 1] || '';\n        });\n        \n        return { route, params };\n      }\n    }\n    \n    return null;\n  }\n\n  /**\n   * Extract query parameters from URL\n   */\n  private extractQueryParams(): Record<string, string> {\n    const query: Record<string, string> = {};\n    const search = window.location.search.substring(1);\n    \n    if (search) {\n      const params = new URLSearchParams(search);\n      params.forEach((value, key) => {\n        query[key] = value;\n      });\n    }\n    \n    return query;\n  }\n\n  /**\n   * Handle route change\n   */\n  private handleRoute(path: string): void {\n    // Update state\n    this.state = {\n      previousPath: this.state.currentPath,\n      currentPath: path,\n      params: {},\n      query: this.extractQueryParams(),\n    };\n    \n    // Find matching route\n    const match = this.matchRoute(path);\n    \n    if (match) {\n      const { route, params } = match;\n      this.state.params = params;\n      this.renderComponent(route.component, { params, query: this.state.query });\n      \n      // Update document title if component is a Page with title\n      const component = route.component as Page;\n      if (component.title) {\n        document.title = component.title;\n      }\n      \n      // Update meta tags if component is a Page with meta\n      if (component.meta) {\n        this.updateMetaTags(component.meta);\n      }\n    } else if (this.notFoundComponent) {\n      this.renderComponent(this.notFoundComponent);\n    } else {\n      console.error(`No route found for ${path}`);\n    }\n  }\n\n  /**\n   * Update meta tags based on page metadata\n   */\n  private updateMetaTags(meta: Page['meta']): void {\n    if (!meta) return;\n    \n    // Update or create description meta tag\n    if (meta.description) {\n      let descTag = document.querySelector('meta[name=\"description\"]');\n      \n      if (!descTag) {\n        descTag = document.createElement('meta');\n        descTag.setAttribute('name', 'description');\n        document.head.appendChild(descTag);\n      }\n      \n      descTag.setAttribute('content', meta.description);\n    }\n    \n    // Handle other meta tags\n    Object.entries(meta).forEach(([key, value]) => {\n      if (key !== 'description' && value) {\n        let metaTag = document.querySelector(`meta[name=\"${key}\"]`);\n        \n        if (!metaTag) {\n          metaTag = document.createElement('meta');\n          metaTag.setAttribute('name', key);\n          document.head.appendChild(metaTag);\n        }\n        \n        metaTag.setAttribute('content', value);\n      }\n    });\n  }\n\n  /**\n   * Render a component\n   */\n  private renderComponent(component: Component, props: any = {}): void {\n    // If there's a current component, call its onUnmount lifecycle method\n    if (this.currentComponent && this.currentComponent.onUnmount) {\n      this.currentComponent.onUnmount();\n    }\n    \n    // Set new component as current\n    this.currentComponent = component;\n    \n    // Render the component\n    try {\n      // Set component context for hooks\n      setCurrentComponent(component);\n      \n      // Render the component\n      const newElement = component.render(props);\n      \n      // Reset hooks context\n      resetHookContext();\n      \n      // Transition between views\n      this.transitionElements(newElement);\n      \n      // Call onMount lifecycle method if it exists\n      if (component.onMount) {\n        queueMicrotask(() => {\n          component.onMount?.();\n        });\n      }\n    } catch (error) {\n      console.error('Error rendering component:', error);\n    }\n  }\n\n  /**\n   * Handle transition between views\n   */\n  private transitionElements(newElement: HTMLElement): void {\n    // If no transition duration, just swap elements\n    if (this.transitionDuration <= 0) {\n      this.rootElement.innerHTML = '';\n      this.rootElement.appendChild(newElement);\n      this.currentElement = newElement;\n      return;\n    }\n    \n    // Add transition classes\n    newElement.style.opacity = '0';\n    if (this.currentElement) {\n      this.currentElement.style.position = 'absolute';\n      this.currentElement.style.width = '100%';\n      this.currentElement.style.transition = `opacity ${this.transitionDuration}ms ease`;\n      this.currentElement.style.opacity = '0';\n    }\n    \n    // Add the new element\n    newElement.style.transition = `opacity ${this.transitionDuration}ms ease`;\n    this.rootElement.appendChild(newElement);\n    \n    // Trigger reflow\n    void newElement.offsetHeight;\n    \n    // Fade in new element\n    newElement.style.opacity = '1';\n    \n    // Remove old element after transition\n    setTimeout(() => {\n      if (this.currentElement && this.currentElement !== newElement && this.currentElement.parentNode) {\n        this.currentElement.parentNode.removeChild(this.currentElement);\n      }\n      this.currentElement = newElement;\n    }, this.transitionDuration);\n  }\n\n  /**\n   * Destroy router and clean up event listeners\n   */\n  destroy(): void {\n    window.removeEventListener('popstate', this.handlePopState);\n    \n    if (this.mode === 'hash') {\n      window.removeEventListener('hashchange', this.handleHashChange);\n    }\n    \n    document.removeEventListener('click', this.handleLinkClick);\n    \n    if (this.currentComponent && this.currentComponent.onUnmount) {\n      this.currentComponent.onUnmount();\n    }\n  }\n\n  /**\n   * Get current router state\n   */\n  getState(): RouterState {\n    return { ...this.state };\n  }\n}\n\n/**\n * Link component for navigation\n */\nexport function Link(props: {\n  to: string;\n  children: Array<HTMLElement | string>;\n  className?: string;\n  activeClassName?: string;\n  exact?: boolean;\n  [key: string]: any;\n}): HTMLElement {\n  const { to, children, className = '', activeClassName = 'active', exact = false, ...rest } = props;\n  \n  // Create anchor element\n  const a = document.createElement('a');\n  a.href = to;\n  \n  // Set class name\n  a.className = className;\n  \n  // Check if link should be active (matches current path)\n  const currentPath = window.location.pathname;\n  const isActive = exact\n    ? currentPath === to\n    : currentPath.startsWith(to) && (to !== '/' || currentPath === '/');\n  \n  if (isActive && activeClassName) {\n    a.className = a.className\n      ? `${a.className} ${activeClassName}`\n      : activeClassName;\n  }\n  \n  // Set other attributes\n  Object.entries(rest).forEach(([key, value]) => {\n    if (key.startsWith('on') && typeof value === 'function') {\n      // Handle event listeners\n      const eventName = key.substring(2).toLowerCase();\n      a.addEventListener(eventName, value as EventListener);\n    } else if (key === 'style' && typeof value === 'object') {\n      // Handle style object\n      Object.entries(value).forEach(([cssKey, cssValue]) => {\n        (a.style as any)[cssKey] = cssValue;\n      });\n    } else if (value !== undefined && value !== null) {\n      // Set attribute for everything else\n      a.setAttribute(key, String(value));\n    }\n  });\n  \n  // Append children\n  children.forEach(child => {\n    if (typeof child === 'string') {\n      a.appendChild(document.createTextNode(child));\n    } else if (child instanceof HTMLElement) {\n      a.appendChild(child);\n    }\n  });\n  \n  return a;\n}\n\n/**\n * NavLink component - Link that can automatically highlight when active\n */\nexport function NavLink(props: {\n  to: string;\n  children: Array<HTMLElement | string>;\n  className?: string;\n  activeClassName?: string;\n  exact?: boolean;\n  [key: string]: any;\n}): HTMLElement {\n  return Link({\n    ...props,\n    activeClassName: props.activeClassName || 'active',\n  });\n}\n\n/**\n * Create a redirect component\n */\nexport function Redirect(props: { to: string }): Component {\n  return {\n    render: () => {\n      setTimeout(() => {\n        // Get the current router if available\n        const currentRouter = (window as any).__BUNDL_ROUTER__;\n        \n        if (currentRouter && typeof currentRouter.navigate === 'function') {\n          currentRouter.navigate(props.to);\n        } else {\n          // Fallback to regular navigation\n          if (props.to.startsWith('http') || props.to.startsWith('//')) {\n            window.location.href = props.to;\n          } else {\n            window.location.pathname = props.to;\n          }\n        }\n      }, 0);\n      \n      return document.createElement('div');\n    }\n  };\n}\n",
    "/**\n * 0x1 Store\n * A lightweight state management system with actions and selectors\n */\n\ntype Listener<T> = (state: T) => void;\ntype Selector<T, S> = (state: T) => S;\ntype Reducer<T> = (state: T, action: Action) => T;\ntype Middleware<T> = (store: Store<T>) => (next: (action: Action) => any) => (action: Action) => any;\n\nexport interface Action {\n  type: string;\n  payload?: any;\n  [key: string]: any;\n}\n\nexport interface Store<T> {\n  getState: () => T;\n  dispatch: (action: Action) => any;\n  subscribe: (listener: Listener<T>) => () => void;\n  select: <S>(selector: Selector<T, S>, listener?: (selectedState: S) => void) => () => S;\n}\n\n/**\n * Create a store with initial state, reducer, and optional middleware\n */\nexport function createStore<T>(\n  reducer: Reducer<T>,\n  initialState: T,\n  middlewares: Middleware<T>[] = []\n): Store<T> {\n  let state = initialState;\n  const listeners: Set<Listener<T>> = new Set();\n  const selectorCache: Map<Selector<T, any>, any> = new Map();\n  \n  // Create base dispatch function\n  let dispatch = (action: Action) => {\n    state = reducer(state, action);\n    \n    // Clear selector cache on state change\n    selectorCache.clear();\n    \n    // Notify all listeners of state change\n    listeners.forEach(listener => listener(state));\n    \n    return action;\n  };\n  \n  // Apply middleware\n  if (middlewares.length > 0) {\n    const middlewareAPI = {\n      getState: () => state,\n      dispatch: (action: Action) => dispatch(action)\n    };\n    \n    // Create middleware chain\n    const chain = middlewares.map(middleware => middleware(middlewareAPI as Store<T>));\n    \n    // Enhance dispatch with middleware\n    dispatch = chain.reduce(\n      (prevDispatch, middleware) => middleware(prevDispatch),\n      dispatch\n    );\n  }\n  \n  // Return store interface\n  return {\n    getState: () => state,\n    dispatch,\n    \n    // Add listener that runs on every state change\n    subscribe: (listener: Listener<T>): (() => void) => {\n      listeners.add(listener);\n      return () => { listeners.delete(listener); };\n    },\n    \n    // Subscribe to a specific part of the state using a selector\n    select: <S>(selector: Selector<T, S>, listener?: (selectedState: S) => void): (() => S) => {\n      // Get current value\n      const getValue = () => {\n        // Check cache first\n        if (selectorCache.has(selector)) {\n          return selectorCache.get(selector);\n        }\n        \n        const value = selector(state);\n        selectorCache.set(selector, value);\n        return value;\n      };\n      \n      // If a listener is provided, subscribe to changes\n      if (listener) {\n        let previousValue = getValue();\n        \n        // Create subscription that only fires when selected data changes\n        const unsubscribe = this.subscribe((state: T) => {\n          const newValue = selector(state);\n          \n          if (newValue !== previousValue) {\n            previousValue = newValue;\n            listener(newValue);\n          }\n        });\n        \n        return () => {\n          unsubscribe();\n          return getValue();\n        };\n      }\n      \n      // Just return the getter function\n      return getValue;\n    }\n  };\n}\n\n/**\n * Combine multiple reducers into one\n */\nexport function combineReducers<T extends Record<string, any>>(\n  reducers: { [K in keyof T]: Reducer<T[K]> }\n): Reducer<T> {\n  return (state: T = {} as T, action: Action): T => {\n    const nextState: Partial<T> = {};\n    let hasChanged = false;\n    \n    // Run each reducer with its own slice of state\n    Object.entries(reducers).forEach(([key, reducer]) => {\n      const previousStateForKey = state[key];\n      const nextStateForKey = reducer(previousStateForKey, action);\n      \n      nextState[key as keyof T] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    });\n    \n    return hasChanged ? nextState as T : state;\n  };\n}\n\n/**\n * Create a slice with reducer and actions\n */\nexport function createSlice<T>({\n  name,\n  initialState,\n  reducers\n}: {\n  name: string;\n  initialState: T;\n  reducers: Record<string, (state: T, payload?: any) => T | void>;\n}) {\n  const actionCreators: Record<string, (payload?: any) => Action> = {};\n  const reducer: Reducer<T> = (state = initialState, action) => {\n    const reducerFunction = reducers[action.type.replace(`${name}/`, '')];\n    \n    if (reducerFunction) {\n      // Allow either immutable or mutable updates\n      const result = reducerFunction(state, action.payload);\n      return result === undefined ? state : result;\n    }\n    \n    return state;\n  };\n  \n  // Create action creators for each reducer\n  Object.keys(reducers).forEach(actionType => {\n    const fullActionType = `${name}/${actionType}`;\n    \n    const actionCreator = (payload?: any) => ({\n      type: fullActionType,\n      payload\n    });\n    \n    // Add the type property to the action creator\n    Object.defineProperty(actionCreator, 'type', {\n      value: fullActionType,\n      writable: false\n    });\n    \n    actionCreators[actionType] = actionCreator;\n  });\n  \n  return {\n    name,\n    reducer,\n    actions: actionCreators\n  };\n}\n\n/**\n * Middleware for logging actions and state changes\n */\nexport const logger: Middleware<any> = store => next => action => {\n  console.group(`Action: ${action.type}`);\n  console.log('Previous State:', store.getState());\n  console.log('Action:', action);\n  \n  const result = next(action);\n  \n  console.log('Next State:', store.getState());\n  console.groupEnd();\n  \n  return result;\n};\n\n/**\n * Middleware for handling async actions (thunk)\n */\nexport const thunk: Middleware<any> = store => next => action => {\n  // Handle thunk functions - functions that take dispatch and getState\n  if (typeof action === 'function') {\n    return (action as any)(store.dispatch, store.getState);\n  }\n  \n  return next(action);\n};\n\n/**\n * Create selectors with memoization\n */\nexport function createSelector<T, R1, Result>(\n  selector1: (state: T) => R1,\n  resultFn: (res1: R1) => Result\n): (state: T) => Result {\n  let lastR1: R1;\n  let lastResult: Result;\n  let lastState: T;\n  \n  return (state: T): Result => {\n    if (state !== lastState) {\n      const r1 = selector1(state);\n      \n      if (r1 !== lastR1) {\n        lastResult = resultFn(r1);\n      }\n      \n      lastR1 = r1;\n      lastState = state;\n    }\n    \n    return lastResult;\n  };\n}\n\n/**\n * Create a selector with multiple input selectors\n */\nexport function createSelector2<T, R1, R2, Result>(\n  selector1: (state: T) => R1,\n  selector2: (state: T) => R2,\n  resultFn: (res1: R1, res2: R2) => Result\n): (state: T) => Result {\n  let lastR1: R1;\n  let lastR2: R2;\n  let lastResult: Result;\n  let lastState: T;\n  \n  return (state: T): Result => {\n    if (state !== lastState) {\n      const r1 = selector1(state);\n      const r2 = selector2(state);\n      \n      if (r1 !== lastR1 || r2 !== lastR2) {\n        lastResult = resultFn(r1, r2);\n      }\n      \n      lastR1 = r1;\n      lastR2 = r2;\n      lastState = state;\n    }\n    \n    return lastResult;\n  };\n}\n\n/**\n * Connect a component to the store\n */\nexport function connect<T, P extends object>(\n  mapStateToProps: (state: T) => Partial<P>,\n  mapDispatchToProps?: Record<string, (dispatch: (action: Action) => any) => any>\n) {\n  return (component: (props: P) => HTMLElement) => {\n    return (props: P) => {\n      // Get the global store\n      const store = (window as any).__BUNDL_STORE__ as Store<T>;\n      \n      if (!store) {\n        console.error('Store not found. Make sure to initialize store first.');\n        return component(props);\n      }\n      \n      // Map state to props\n      const stateProps = mapStateToProps(store.getState());\n      \n      // Map dispatch to props\n      let dispatchProps = {};\n      if (mapDispatchToProps) {\n        dispatchProps = Object.entries(mapDispatchToProps).reduce((acc, [key, actionCreator]) => {\n          acc[key] = (...args: any[]) => actionCreator(store.dispatch)(...args);\n          return acc;\n        }, {} as Record<string, any>);\n      }\n      \n      // Merge props\n      const mergedProps = { ...props, ...stateProps, ...dispatchProps };\n      \n      // Render component with merged props\n      const element = component(mergedProps);\n      \n      // Subscribe to store changes\n      store.subscribe((state) => {\n        const newStateProps = mapStateToProps(state);\n        const newMergedProps = { ...props, ...newStateProps, ...dispatchProps };\n        \n        // Re-render component if props changed\n        if (JSON.stringify(newStateProps) !== JSON.stringify(stateProps)) {\n          const newElement = component(newMergedProps);\n          if (element.parentNode) {\n            element.parentNode.replaceChild(newElement, element);\n          }\n        }\n      });\n      \n      return element;\n    };\n  };\n}\n\n/**\n * Provider function to make store available globally\n */\nexport function initializeStore<T>(store: Store<T>): void {\n  (window as any).__BUNDL_STORE__ = store;\n}\n",
    "/**\n * 0x1 Animation Utilities\n * Lightweight animation helpers for smooth transitions\n */\n\n// Animation timing functions\nexport const easings = {\n  linear: (t: number): number => t,\n  easeInQuad: (t: number): number => t * t,\n  easeOutQuad: (t: number): number => t * (2 - t),\n  easeInOutQuad: (t: number): number => t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t,\n  easeInCubic: (t: number): number => t * t * t,\n  easeOutCubic: (t: number): number => (--t) * t * t + 1,\n  easeInOutCubic: (t: number): number => t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1\n};\n\n// Animation options\nexport interface AnimationOptions {\n  duration?: number; // in milliseconds\n  easing?: (t: number) => number;\n  delay?: number;\n  onUpdate?: (value: number) => void;\n  onComplete?: () => void;\n}\n\n/**\n * Animates a value from start to end\n */\nexport function animate(\n  start: number,\n  end: number,\n  options: AnimationOptions = {}\n): { stop: () => void } {\n  const {\n    duration = 300,\n    easing = easings.easeOutQuad,\n    delay = 0,\n    onUpdate,\n    onComplete\n  } = options;\n  \n  let startTime: number | null = null;\n  let rafId: number | null = null;\n  let isStopped = false;\n  \n  function step(timestamp: number) {\n    if (isStopped) return;\n    if (startTime === null) {\n      startTime = timestamp;\n    }\n    \n    const elapsed = timestamp - startTime;\n    \n    if (elapsed < delay) {\n      rafId = requestAnimationFrame(step);\n      return;\n    }\n    \n    const adjustedElapsed = elapsed - delay;\n    \n    if (adjustedElapsed >= duration) {\n      onUpdate?.(end);\n      onComplete?.();\n      return;\n    }\n    \n    const progress = easing(Math.min(adjustedElapsed / duration, 1));\n    const currentValue = start + (end - start) * progress;\n    \n    onUpdate?.(currentValue);\n    rafId = requestAnimationFrame(step);\n  }\n  \n  // Start animation on next frame\n  rafId = requestAnimationFrame(step);\n  \n  // Return a stop function\n  return {\n    stop: () => {\n      if (rafId !== null) {\n        cancelAnimationFrame(rafId);\n        rafId = null;\n      }\n      isStopped = true;\n    }\n  };\n}\n\n/**\n * Fade in animation\n */\nexport function fadeIn(element: HTMLElement, options: AnimationOptions = {}): { stop: () => void } {\n  element.style.opacity = '0';\n  element.style.display = '';\n  \n  return animate(0, 1, {\n    duration: options.duration ?? 200,\n    easing: options.easing ?? easings.easeOutQuad,\n    delay: options.delay,\n    onUpdate: (value) => {\n      element.style.opacity = String(value);\n    },\n    onComplete: options.onComplete\n  });\n}\n\n/**\n * Fade out animation\n */\nexport function fadeOut(element: HTMLElement, options: AnimationOptions = {}): { stop: () => void } {\n  element.style.opacity = '1';\n  \n  return animate(1, 0, {\n    duration: options.duration ?? 200,\n    easing: options.easing ?? easings.easeOutQuad,\n    delay: options.delay,\n    onUpdate: (value) => {\n      element.style.opacity = String(value);\n    },\n    onComplete: () => {\n      element.style.display = 'none';\n      options.onComplete?.();\n    }\n  });\n}\n\n/**\n * Slide down animation\n */\nexport function slideDown(element: HTMLElement, options: AnimationOptions = {}): { stop: () => void } {\n  // Store original height\n  element.style.display = '';\n  const height = element.scrollHeight;\n  element.style.overflow = 'hidden';\n  element.style.height = '0px';\n  element.style.opacity = '0';\n  \n  return animate(0, height, {\n    duration: options.duration ?? 300,\n    easing: options.easing ?? easings.easeOutCubic,\n    delay: options.delay,\n    onUpdate: (value) => {\n      element.style.height = `${value}px`;\n      element.style.opacity = String(Math.min(value / height, 1));\n    },\n    onComplete: () => {\n      element.style.height = '';\n      element.style.overflow = '';\n      options.onComplete?.();\n    }\n  });\n}\n\n/**\n * Slide up animation\n */\nexport function slideUp(element: HTMLElement, options: AnimationOptions = {}): { stop: () => void } {\n  const height = element.scrollHeight;\n  element.style.overflow = 'hidden';\n  element.style.height = `${height}px`;\n  \n  return animate(height, 0, {\n    duration: options.duration ?? 300,\n    easing: options.easing ?? easings.easeOutCubic,\n    delay: options.delay,\n    onUpdate: (value) => {\n      element.style.height = `${value}px`;\n      element.style.opacity = String(Math.max(value / height, 0));\n    },\n    onComplete: () => {\n      element.style.display = 'none';\n      element.style.height = '';\n      element.style.overflow = '';\n      options.onComplete?.();\n    }\n  });\n}\n\n/**\n * Animate multiple properties simultaneously\n */\nexport function animateProperties(\n  element: HTMLElement,\n  properties: Record<string, { from: number; to: number; unit?: string }>,\n  options: AnimationOptions = {}\n): { stop: () => void } {\n  // Setup initial values\n  Object.entries(properties).forEach(([prop, { from, unit = 'px' }]) => {\n    (element.style as any)[prop] = `${from}${unit}`;\n  });\n  \n  const { duration = 300, easing = easings.easeOutQuad, delay = 0, onComplete } = options;\n  \n  let startTime: number | null = null;\n  let rafId: number | null = null;\n  let isStopped = false;\n  \n  function step(timestamp: number) {\n    if (isStopped) return;\n    if (startTime === null) {\n      startTime = timestamp;\n    }\n    \n    const elapsed = timestamp - startTime;\n    \n    if (elapsed < delay) {\n      rafId = requestAnimationFrame(step);\n      return;\n    }\n    \n    const adjustedElapsed = elapsed - delay;\n    \n    if (adjustedElapsed >= duration) {\n      // Set final values\n      Object.entries(properties).forEach(([prop, { to, unit = 'px' }]) => {\n        (element.style as any)[prop] = `${to}${unit}`;\n      });\n      \n      onComplete?.();\n      return;\n    }\n    \n    const progress = easing(Math.min(adjustedElapsed / duration, 1));\n    \n    // Update all properties\n    Object.entries(properties).forEach(([prop, { from, to, unit = 'px' }]) => {\n      const current = from + (to - from) * progress;\n      (element.style as any)[prop] = `${current}${unit}`;\n    });\n    \n    rafId = requestAnimationFrame(step);\n  }\n  \n  // Start animation on next frame\n  rafId = requestAnimationFrame(step);\n  \n  // Return a stop function\n  return {\n    stop: () => {\n      if (rafId !== null) {\n        cancelAnimationFrame(rafId);\n        rafId = null;\n      }\n      isStopped = true;\n    }\n  };\n}\n\n/**\n * Spring animation for more natural motion\n */\nexport function spring(\n  element: HTMLElement,\n  property: keyof CSSStyleDeclaration,\n  target: number,\n  options: {\n    stiffness?: number;\n    damping?: number;\n    precision?: number;\n    unit?: string;\n    onComplete?: () => void;\n  } = {}\n): { stop: () => void } {\n  const {\n    stiffness = 0.1,\n    damping = 0.8,\n    precision = 0.01,\n    unit = 'px',\n    onComplete\n  } = options;\n  \n  // Get current value\n  let current = parseFloat((element.style as any)[property] || '0');\n  let velocity = 0;\n  let rafId: number | null = null;\n  let isStopped = false;\n  \n  function step() {\n    if (isStopped) return;\n    \n    // Calculate spring physics\n    const diff = target - current;\n    const acceleration = diff * stiffness;\n    velocity = velocity * damping + acceleration;\n    current += velocity;\n    \n    // Update element\n    (element.style as any)[property] = `${current}${unit}`;\n    \n    // Check if we're done (close enough to target)\n    if (Math.abs(diff) < precision && Math.abs(velocity) < precision) {\n      (element.style as any)[property] = `${target}${unit}`;\n      onComplete?.();\n      return;\n    }\n    \n    rafId = requestAnimationFrame(step);\n  }\n  \n  // Start animation\n  rafId = requestAnimationFrame(step);\n  \n  // Return stop function\n  return {\n    stop: () => {\n      if (rafId !== null) {\n        cancelAnimationFrame(rafId);\n        rafId = null;\n      }\n      isStopped = true;\n    }\n  };\n}\n",
    "/**\n * 0x1 DOM Utilities\n * Lightweight DOM manipulation helpers for efficient updates\n */\n\n/**\n * Efficiently sets multiple attributes on an element\n */\nexport function setAttributes(element: HTMLElement, attributes: Record<string, string>): void {\n  Object.entries(attributes).forEach(([key, value]) => {\n    element.setAttribute(key, value);\n  });\n}\n\n/**\n * Efficiently sets multiple CSS properties on an element\n */\nexport function setStyles(element: HTMLElement, styles: Record<string, string>): void {\n  Object.entries(styles).forEach(([property, value]) => {\n    (element.style as any)[property] = value;\n  });\n}\n\n/**\n * Efficiently adds multiple event listeners to an element\n */\nexport function addEventListeners(\n  element: HTMLElement,\n  events: Record<string, EventListener>\n): void {\n  Object.entries(events).forEach(([event, handler]) => {\n    element.addEventListener(event, handler);\n  });\n}\n\n/**\n * Removes all children from an element\n */\nexport function clearElement(element: HTMLElement): void {\n  while (element.firstChild) {\n    element.removeChild(element.firstChild);\n  }\n}\n\n/**\n * Creates a DOM element with specified properties\n */\nexport function createElementWithProps<K extends keyof HTMLElementTagNameMap>(\n  tagName: K,\n  props: {\n    attributes?: Record<string, string>;\n    styles?: Record<string, string>;\n    events?: Record<string, EventListener>;\n    innerHTML?: string;\n    children?: (HTMLElement | Text)[];\n  } = {}\n): HTMLElementTagNameMap[K] {\n  const element = document.createElement(tagName);\n  \n  if (props.attributes) {\n    setAttributes(element, props.attributes);\n  }\n  \n  if (props.styles) {\n    setStyles(element, props.styles);\n  }\n  \n  if (props.events) {\n    addEventListeners(element, props.events);\n  }\n  \n  if (props.innerHTML !== undefined) {\n    element.innerHTML = props.innerHTML;\n  }\n  \n  if (props.children && props.children.length > 0) {\n    props.children.forEach(child => {\n      element.appendChild(child);\n    });\n  }\n  \n  return element;\n}\n\n/**\n * Efficient element diffing and patching algorithm\n * This allows partial DOM updates instead of full replacement\n */\nexport function patchElement(oldEl: HTMLElement, newEl: HTMLElement): void {\n  // Transfer attributes\n  Array.from(newEl.attributes).forEach(attr => {\n    if (oldEl.getAttribute(attr.name) !== attr.value) {\n      oldEl.setAttribute(attr.name, attr.value);\n    }\n  });\n  \n  // Remove attributes not in new element\n  Array.from(oldEl.attributes).forEach(attr => {\n    if (!newEl.hasAttribute(attr.name)) {\n      oldEl.removeAttribute(attr.name);\n    }\n  });\n  \n  // If content is just text, update efficiently\n  if (\n    newEl.children.length === 0 && \n    oldEl.children.length === 0 && \n    newEl.textContent !== oldEl.textContent\n  ) {\n    oldEl.textContent = newEl.textContent;\n    return;\n  }\n  \n  // Recursive diffing of children\n  const oldChildren = Array.from(oldEl.children);\n  const newChildren = Array.from(newEl.children);\n  \n  // Remove extra children\n  for (let i = newChildren.length; i < oldChildren.length; i++) {\n    oldEl.removeChild(oldChildren[i]);\n  }\n  \n  // Update existing children\n  for (let i = 0; i < newChildren.length; i++) {\n    if (i < oldChildren.length) {\n      if (oldChildren[i].tagName === newChildren[i].tagName) {\n        // Same element type, patch it\n        patchElement(oldChildren[i] as HTMLElement, newChildren[i] as HTMLElement);\n      } else {\n        // Different element type, replace it\n        oldEl.replaceChild(newChildren[i], oldChildren[i]);\n      }\n    } else {\n      // Add new child\n      oldEl.appendChild(newChildren[i]);\n    }\n  }\n}\n\n/**\n * Create DOM nodes from HTML strings\n */\nexport function createFromHTML(html: string): DocumentFragment {\n  const template = document.createElement('template');\n  template.innerHTML = html.trim();\n  return template.content;\n}\n\n/**\n * Find elements by query selector with automatic typing\n */\nexport function select<K extends keyof HTMLElementTagNameMap>(\n  selectors: K\n): HTMLElementTagNameMap[K] | null;\nexport function select(selectors: string): HTMLElement | null;\nexport function select(selectors: string): HTMLElement | null {\n  return document.querySelector(selectors);\n}\n\n/**\n * Find all elements matching a selector\n */\nexport function selectAll<K extends keyof HTMLElementTagNameMap>(\n  selectors: K\n): NodeListOf<HTMLElementTagNameMap[K]>;\nexport function selectAll(selectors: string): NodeListOf<HTMLElement>;\nexport function selectAll(selectors: string): NodeListOf<HTMLElement> {\n  return document.querySelectorAll(selectors);\n}\n\n/**\n * Check if an element matches a selector\n */\nexport function matches(element: HTMLElement, selector: string): boolean {\n  return element.matches(selector);\n}\n\n/**\n * Find the closest ancestor that matches a selector\n */\nexport function closest(element: HTMLElement, selector: string): HTMLElement | null {\n  return element.closest(selector);\n}\n\n/**\n * Insert element after another element\n */\nexport function insertAfter(newNode: Node, referenceNode: Node): void {\n  if (referenceNode.parentNode) {\n    referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n  }\n}\n\n/**\n * Check if an element contains another element\n */\nexport function contains(parent: HTMLElement, child: HTMLElement): boolean {\n  return parent.contains(child);\n}\n\n/**\n * Get computed style for an element\n */\nexport function getStyle(element: HTMLElement, property: string): string {\n  return window.getComputedStyle(element).getPropertyValue(property);\n}\n\n/**\n * Set or get data attributes on an element\n */\nexport function data(element: HTMLElement, key: string, value?: string): string | undefined {\n  if (value === undefined) {\n    return element.dataset[key];\n  } else {\n    element.dataset[key] = value;\n    return value;\n  }\n}\n\n/**\n * Add multiple classes to an element\n */\nexport function addClass(element: HTMLElement, ...classNames: string[]): void {\n  element.classList.add(...classNames);\n}\n\n/**\n * Remove multiple classes from an element\n */\nexport function removeClass(element: HTMLElement, ...classNames: string[]): void {\n  element.classList.remove(...classNames);\n}\n\n/**\n * Toggle a class on an element\n */\nexport function toggleClass(element: HTMLElement, className: string, force?: boolean): boolean {\n  return element.classList.toggle(className, force);\n}\n",
    "/**\n * 0x1 Framework\n * \n * An ultra-minimal TypeScript framework with extreme performance powered by Bun\n * https://github.com/Triex/0x1\n * Main entry point exporting all core functionality\n */\n\n// Export core components\nexport {\n  createElement,\n  Component,\n  mount,\n  Fragment,\n  createComponent,\n  updateComponent,\n  fromHTML,\n  textElement,\n  template\n} from './core/component.js';\n\n// Export router and navigation\nexport {\n  Router,\n  Link,\n  NavLink,\n  Redirect,\n  type Page,\n  type RouteParams\n} from './core/navigation.js';\n\n// Export hooks\nexport {\n  useState,\n  useEffect,\n  useMemo,\n  useCallback,\n  useRef,\n  useForm,\n  useFetch,\n  useLocalStorage,\n  useClickOutside\n} from './core/hooks.js';\n\n// Export store\nexport {\n  createStore,\n  combineReducers,\n  createSlice,\n  connect,\n  initializeStore,\n  logger,\n  thunk,\n  createSelector,\n  createSelector2,\n  type Action,\n  type Store\n} from './core/store.js';\n\n// Export animations\nexport {\n  animate,\n  fadeIn,\n  fadeOut,\n  slideDown,\n  slideUp,\n  animateProperties,\n  spring,\n  easings,\n  type AnimationOptions\n} from './utils/animations.js';\n\n// DOM utilities\nexport { setAttributes, setStyles, patchElement, clearElement } from './utils/dom.js';\n\n// Config types\nexport type { BundlConfig } from './types/config.js';\n\n// Version info\nexport const version = '0.1.0';\n"
  ],
  "mappings": "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",
  "debugId": "226298829FA3F1D964756E2164756E21",
  "names": []
}