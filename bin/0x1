#!/usr/bin/env bash
# 0x1 CLI Launcher
# This script ensures the CLI is executed with Bun

# Find the Bun executable
BUN_PATH=$(which bun)

if [ -z "$BUN_PATH" ]; then
  echo "Error: Bun is required but not found in PATH"
  echo "Please install Bun: https://bun.sh"
  exit 1
fi

# Get the directory of this script
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Determine the real path to the CLI script
# For global installations, we need to look in the package's node_modules directory
CLI_SCRIPT="$DIR/../dist/cli/index.js"

# If the CLI script doesn't exist at the expected path, try to find it in node_modules
if [ ! -f "$CLI_SCRIPT" ]; then
  # Check common install locations for Bun global packages
  # This handles both global installations and linked packages
  POSSIBLE_PATHS=(
    "$DIR/../node_modules/0x1/dist/cli/index.js"
    "$HOME/.bun/install/global/node_modules/0x1/dist/cli/index.js"
    "/usr/local/lib/node_modules/0x1/dist/cli/index.js"
    "$HOME/.node_modules/0x1/dist/cli/index.js"
    "$HOME/.bun/node_modules/0x1/dist/cli/index.js"
  )

  for path in "${POSSIBLE_PATHS[@]}"; do
    if [ -f "$path" ]; then
      CLI_SCRIPT="$path"
      break
    fi
  done
fi

# If we still can't find the CLI script, try a fallback approach
if [ ! -f "$CLI_SCRIPT" ]; then
  # Try to find it using Bun's install location
  BUNX_PATH=$(which bunx)
  if [ -n "$BUNX_PATH" ]; then
    exec "$BUNX_PATH" 0x1 "$@"
    exit $?
  fi
  
  echo "Error: Could not find 0x1 CLI script"
  echo "Please reinstall 0x1 using: bun install -g 0x1"
  exit 1
fi

# Execute the CLI with Bun
exec "$BUN_PATH" "$CLI_SCRIPT" "$@"
